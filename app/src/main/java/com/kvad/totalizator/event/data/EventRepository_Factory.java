// Generated by Dagger (https://dagger.dev).
package com.kvad.totalizator.event.data;

import com.kvad.totalizator.event.data.api.EventService;
import com.kvad.totalizator.event.data.mappers.MapRequestEventToEvent;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EventRepository_Factory implements Factory<EventRepository> {
  private final Provider<EventService> eventServiceProvider;

  private final Provider<MapRequestEventToEvent> mapRequestEventToEventProvider;

  public EventRepository_Factory(Provider<EventService> eventServiceProvider,
      Provider<MapRequestEventToEvent> mapRequestEventToEventProvider) {
    this.eventServiceProvider = eventServiceProvider;
    this.mapRequestEventToEventProvider = mapRequestEventToEventProvider;
  }

  @Override
  public EventRepository get() {
    return newInstance(eventServiceProvider.get(), mapRequestEventToEventProvider.get());
  }

  public static EventRepository_Factory create(Provider<EventService> eventServiceProvider,
      Provider<MapRequestEventToEvent> mapRequestEventToEventProvider) {
    return new EventRepository_Factory(eventServiceProvider, mapRequestEventToEventProvider);
  }

  public static EventRepository newInstance(EventService eventService,
      MapRequestEventToEvent mapRequestEventToEvent) {
    return new EventRepository(eventService, mapRequestEventToEvent);
  }
}
