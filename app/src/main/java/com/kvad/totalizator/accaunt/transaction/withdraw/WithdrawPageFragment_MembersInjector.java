// Generated by Dagger (https://dagger.dev).
package com.kvad.totalizator.accaunt.transaction.withdraw;

import com.kvad.totalizator.di.ViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WithdrawPageFragment_MembersInjector implements MembersInjector<WithdrawPageFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  public WithdrawPageFragment_MembersInjector(Provider<ViewModelFactory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<WithdrawPageFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    return new WithdrawPageFragment_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(WithdrawPageFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.kvad.totalizator.accaunt.transactionfeature.withdraw.WithdrawPageFragment.viewModelFactory")
  public static void injectViewModelFactory(WithdrawPageFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
