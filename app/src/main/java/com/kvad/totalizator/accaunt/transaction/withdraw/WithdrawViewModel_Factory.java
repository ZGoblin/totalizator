// Generated by Dagger (https://dagger.dev).
package com.kvad.totalizator.accaunt.transaction.withdraw;

import com.kvad.totalizator.accaunt.transaction.domain.WithdrawUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WithdrawViewModel_Factory implements Factory<WithdrawViewModel> {
  private final Provider<WithdrawUseCase> withdrawUseCaseProvider;

  public WithdrawViewModel_Factory(Provider<WithdrawUseCase> withdrawUseCaseProvider) {
    this.withdrawUseCaseProvider = withdrawUseCaseProvider;
  }

  @Override
  public WithdrawViewModel get() {
    return newInstance(withdrawUseCaseProvider.get());
  }

  public static WithdrawViewModel_Factory create(
      Provider<WithdrawUseCase> withdrawUseCaseProvider) {
    return new WithdrawViewModel_Factory(withdrawUseCaseProvider);
  }

  public static WithdrawViewModel newInstance(WithdrawUseCase withdrawUseCase) {
    return new WithdrawViewModel(withdrawUseCase);
  }
}
