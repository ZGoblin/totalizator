// Generated by Dagger (https://dagger.dev).
package com.kvad.totalizator.account.transaction.withdraw;

import com.kvad.totalizator.account.data.UserService;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WithdrawRepository_Factory implements Factory<WithdrawRepository> {
  private final Provider<UserService> userServiceProvider;

  public WithdrawRepository_Factory(Provider<UserService> userServiceProvider) {
    this.userServiceProvider = userServiceProvider;
  }

  @Override
  public WithdrawRepository get() {
    return newInstance(userServiceProvider.get());
  }

  public static WithdrawRepository_Factory create(Provider<UserService> userServiceProvider) {
    return new WithdrawRepository_Factory(userServiceProvider);
  }

  public static WithdrawRepository newInstance(UserService userService) {
    return new WithdrawRepository(userService);
  }
}
